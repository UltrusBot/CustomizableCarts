plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    alias libs.plugins.publishing
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}
fabricApi {
    configureDataGeneration()
}
loom {
    accessWidenerPath = file("src/main/resources/customizablecarts.accesswidener")
}
repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft libs.minecraft
    mappings loom.officialMojangMappings()
    modImplementation libs.fabric.loader

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation libs.fabric.api
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", libs.minecraft.get().version
    inputs.property "loader_version", libs.fabric.loader.get().version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": libs.minecraft.get().version,
                "loader_version": libs.fabric.loader.get().version
    }
}

publishMods {
    displayName = "Customizable Carts Beta v$project.version+${libs.minecraft.get().getVersionConstraint().displayName}"
    file = remapJar.archiveFile
    changelog = file("$rootDir/CHANGELOG.md").text
    version = "v${project.version}"
    type = BETA
    modLoaders.addAll("fabric", "quilt")
    curseforge {
        projectId = "1046930"
        minecraftVersions.add("1.21")
        accessToken = providers.gradleProperty("CF_API_KEY")
        requires {
            slug = "fabric-api"
        }
    }
    modrinth {
        projectId = "N5SI6Kbt"
        minecraftVersions.add("1.21")
        accessToken = providers.gradleProperty("MODRINTH_TOKEN")
        requires {
            slug = "fabric-api"
        }
    }
    github {
        repository = "UltrusBot/CustomizableCarts"
        commitish = "main"
        accessToken = providers.gradleProperty("GH_TOKEN")
        tagName = "v$project.version"
    }

    dryRun = false
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
